{"ast":null,"code":"var _jsxFileName = \"D:\\\\q\\\\e-commerce\\\\src\\\\components\\\\Store.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Card from \"../Cards/Card\";\nimport classes from \"../Cards/Card.module.css\";\nimport Title from \"./Title\";\nimport Header from \"./Header\";\nimport Cart from \"./Cart\";\nimport { Button } from \"react-bootstrap\";\nimport productsArr from \"./ProductArr\";\nimport AuthContext from \"../store/auth-context\";\nimport CartContext from \"../store/cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Store = () => {\n  _s();\n  const [cartIsShown, setCartIsShown] = useState(false);\n  const authCtx = useContext(AuthContext);\n  const cartcntx = useContext(CartContext);\n  let email = localStorage.getItem(\"email\");\n  useEffect(() => {\n    console.log(email);\n    fetch(`https://crudcrud.com/api/e437302c53724eb08c1aace7a5a964f3/cartData${email}`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      cartcntx.items = data;\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }, []);\n  const showCartHandler = () => {\n    setCartIsShown(true);\n  };\n  const hideCartHandler = () => {\n    setCartIsShown(false);\n  };\n  const productlist = productsArr.map(prod => /*#__PURE__*/_jsxDEV(Card, {\n    id: prod.id,\n    title: prod.title,\n    imageUrl: prod.imageUrl,\n    price: prod.price,\n    avail_stock: prod.avail_stock\n  }, prod.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [cartIsShown && /*#__PURE__*/_jsxDEV(Cart, {\n      onClose: hideCartHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      onShowCart: showCartHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.container,\n      children: productlist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: \"1%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        onClick: showCartHandler,\n        children: \"See the Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Store, \"ioysrLgDmofm1koAcoUpwkIRh8c=\");\n_c = Store;\nexport default Store;\nvar _c;\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"names":["React","useState","useContext","useEffect","Card","classes","Title","Header","Cart","Button","productsArr","AuthContext","CartContext","Store","cartIsShown","setCartIsShown","authCtx","cartcntx","email","localStorage","getItem","console","log","fetch","headers","then","res","json","data","items","catch","err","message","showCartHandler","hideCartHandler","productlist","map","prod","id","title","imageUrl","price","avail_stock","container","display","justifyContent","alignItems","margin"],"sources":["D:/q/e-commerce/src/components/Store.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport Card from \"../Cards/Card\";\r\nimport classes from \"../Cards/Card.module.css\";\r\nimport Title from \"./Title\";\r\nimport Header from \"./Header\";\r\nimport Cart from \"./Cart\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport productsArr from \"./ProductArr\";\r\nimport AuthContext from \"../store/auth-context\";\r\nimport CartContext from \"../store/cart-context\";\r\nconst Store = () => {\r\n  const [cartIsShown, setCartIsShown] = useState(false);\r\n  const authCtx = useContext(AuthContext);\r\n  const cartcntx = useContext(CartContext);\r\n\r\n  let email = localStorage.getItem(\"email\");\r\n\r\n  useEffect(() => {\r\n    console.log(email)\r\n    fetch(\r\n      `https://crudcrud.com/api/e437302c53724eb08c1aace7a5a964f3/cartData${email}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        cartcntx.items = data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }, []);\r\n\r\n  const showCartHandler = () => {\r\n    setCartIsShown(true);\r\n  };\r\n\r\n  const hideCartHandler = () => {\r\n    setCartIsShown(false);\r\n  };\r\n\r\n  const productlist = productsArr.map((prod) => (\r\n    <Card\r\n      key={prod.id}\r\n      id={prod.id}\r\n      title={prod.title}\r\n      imageUrl={prod.imageUrl}\r\n      price={prod.price}\r\n      avail_stock={prod.avail_stock}\r\n    ></Card>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      {cartIsShown && <Cart onClose={hideCartHandler}></Cart>}\r\n      <Header onShowCart={showCartHandler}></Header>\r\n      <Title />\r\n      <ul className={classes.container}>{productlist}</ul>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          margin: \"1%\",\r\n        }}\r\n      >\r\n        <Button variant=\"outline-secondary\" onClick={showCartHandler}>\r\n          See the Cart\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Store;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}