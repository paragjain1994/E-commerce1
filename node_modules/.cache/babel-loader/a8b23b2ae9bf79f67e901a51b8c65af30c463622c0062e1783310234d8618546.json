{"ast":null,"code":"var _jsxFileName = \"D:\\\\q\\\\e-commerce\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartProvider = props => {\n  _s();\n  const [items, updateItems] = useState([]);\n  const addItemToCartHandler = newItem => {\n    const email = localStorage.getItem(\"email\");\n    const apiKey = `https://crudcrud.com/api/c332311a64f5485d92d2a17c771c5f4f/cartData${email}`;\n    f();\n    async function f() {\n      const res = await fetch(`${apiKey}`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          imageUrl: newItem.imageUrl,\n          quantity: newItem.quantity\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n    }\n    const idx = items.findIndex(i => i.id === newItem.id);\n    if (idx === -1) {\n      updateItems([...items, newItem]);\n    } else {\n      let temp = [...items];\n      temp[idx].quantity = Number(temp[idx].quantity) + Number(newItem.quantity);\n      updateItems(temp);\n    }\n  };\n  const removeItemFromCartHandler = id => {\n    const idx = items.findIndex(i => i.id === id);\n    let temp = [...items];\n    temp.splice(idx, 1);\n    updateItems(temp);\n  };\n  const cartContext = {\n    items: items,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    msg: \"I am accessible anywhere\"\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"dL6YHjiSmp0OR7ZaYvy6NRcmkZE=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useState","CartContext","CartProvider","props","items","updateItems","addItemToCartHandler","newItem","email","localStorage","getItem","apiKey","f","res","fetch","method","body","JSON","stringify","id","title","price","imageUrl","quantity","headers","data","json","idx","findIndex","i","temp","Number","removeItemFromCartHandler","splice","cartContext","addItem","removeItem","msg","children"],"sources":["D:/q/e-commerce/src/store/CartProvider.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\nconst CartProvider = (props) => {\r\n  const [items, updateItems] = useState([]);\r\n\r\n  const addItemToCartHandler = (newItem) => {\r\n    const email = localStorage.getItem(\"email\");\r\n    const apiKey = `https://crudcrud.com/api/c332311a64f5485d92d2a17c771c5f4f/cartData${email}`;\r\n    f();\r\n\r\n    async function f() {\r\n      const res = await fetch(`${apiKey}`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          id: newItem.id,\r\n          title: newItem.title,\r\n          price: newItem.price,\r\n          imageUrl: newItem.imageUrl,\r\n          quantity: newItem.quantity,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const data = await res.json();\r\n    }\r\n\r\n    const idx = items.findIndex((i) => i.id === newItem.id);\r\n\r\n    if (idx === -1) {\r\n      updateItems([...items, newItem]);\r\n    } else {\r\n      let temp = [...items];\r\n      temp[idx].quantity =\r\n        Number(temp[idx].quantity) + Number(newItem.quantity);\r\n      updateItems(temp);\r\n    }\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    const idx = items.findIndex((i) => i.id === id);\r\n    let temp = [...items];\r\n    temp.splice(idx, 1);\r\n    updateItems(temp);\r\n  };\r\n  const cartContext = {\r\n    items: items,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    msg: \"I am accessible anywhere\",\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\nexport default CartProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,gBAAgB;AAAC;AACzC,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEzC,MAAMM,oBAAoB,GAAIC,OAAO,IAAK;IACxC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,MAAM,GAAI,qEAAoEH,KAAM,EAAC;IAC3FI,CAAC,EAAE;IAEH,eAAeA,CAAC,GAAG;MACjB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,EAAC,EAAE;QACnCI,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,EAAE,EAAEZ,OAAO,CAACY,EAAE;UACdC,KAAK,EAAEb,OAAO,CAACa,KAAK;UACpBC,KAAK,EAAEd,OAAO,CAACc,KAAK;UACpBC,QAAQ,EAAEf,OAAO,CAACe,QAAQ;UAC1BC,QAAQ,EAAEhB,OAAO,CAACgB;QACpB,CAAC,CAAC;QACFC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMZ,GAAG,CAACa,IAAI,EAAE;IAC/B;IAEA,MAAMC,GAAG,GAAGvB,KAAK,CAACwB,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACV,EAAE,KAAKZ,OAAO,CAACY,EAAE,CAAC;IAEvD,IAAIQ,GAAG,KAAK,CAAC,CAAC,EAAE;MACdtB,WAAW,CAAC,CAAC,GAAGD,KAAK,EAAEG,OAAO,CAAC,CAAC;IAClC,CAAC,MAAM;MACL,IAAIuB,IAAI,GAAG,CAAC,GAAG1B,KAAK,CAAC;MACrB0B,IAAI,CAACH,GAAG,CAAC,CAACJ,QAAQ,GAChBQ,MAAM,CAACD,IAAI,CAACH,GAAG,CAAC,CAACJ,QAAQ,CAAC,GAAGQ,MAAM,CAACxB,OAAO,CAACgB,QAAQ,CAAC;MACvDlB,WAAW,CAACyB,IAAI,CAAC;IACnB;EACF,CAAC;EAED,MAAME,yBAAyB,GAAIb,EAAE,IAAK;IACxC,MAAMQ,GAAG,GAAGvB,KAAK,CAACwB,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACV,EAAE,KAAKA,EAAE,CAAC;IAC/C,IAAIW,IAAI,GAAG,CAAC,GAAG1B,KAAK,CAAC;IACrB0B,IAAI,CAACG,MAAM,CAACN,GAAG,EAAE,CAAC,CAAC;IACnBtB,WAAW,CAACyB,IAAI,CAAC;EACnB,CAAC;EACD,MAAMI,WAAW,GAAG;IAClB9B,KAAK,EAAEA,KAAK;IACZ+B,OAAO,EAAE7B,oBAAoB;IAC7B8B,UAAU,EAAEJ,yBAAyB;IACrCK,GAAG,EAAE;EACP,CAAC;EACD,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEH,WAAY;IAAA,UACtC/B,KAAK,CAACmC;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B,CAAC;AAAC,GAtDIpC,YAAY;AAAA,KAAZA,YAAY;AAuDlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}